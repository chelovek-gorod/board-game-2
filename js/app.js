(()=>{"use strict";var t={d:(e,i)=>{for(var r in i)t.o(i,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:i[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};t.d({},{H:()=>d});const e={dice:"dices_84x84px_mixed_frames.png",board:"board.svg",pointerGreen:"pointer_green_132x132px.png",pointerRed:"pointer_red_132x132px.png",pointerPlayerH:"turn_480x120px_32frames.png",pointerPlayerV:"turn_120x480px_32frames.png",dicePointer:"dice_pointer_100x100px_15frames.png",tokenGreen:"token_green_128x128px.png",tokenYellow:"token_yellow_128x128px.png",tokenBlue:"token_blue_128x128px.png",tokenRed:"token_red_128x128px.png",tokenColor:"token_color_128x128px.png",tokenPurple:"token_purple_128x128px.png",tokenBlack:"token_black_128x128px.png"},i={dice:"se_dices.mp3",dice2:"se_dices.mp3"},r=120,s=500;class a{static instance;constructor(){if(a.instance)return a.instance;this.canvas=document.createElement("canvas"),this.width=this.canvas.width=15*r,this.height=this.canvas.height=15*r,this.x=Math.round(this.width/2),this.y=Math.round(this.height/2),this.context=this.canvas.getContext("2d"),document.body.append(this.canvas),this.layers=[],a.instance=this,this.resize()}resize(){let t=innerWidth>innerHeight?innerHeight:innerWidth;this.canvas.style.width=t+"px",this.canvas.style.height=t+"px"}getLayer(t){return this.layers.find((e=>e.name===t))}}addEventListener("resize",(function(){a.instance&&a.instance.resize()}));const h=new a;let o=performance.now(),n=!0;addEventListener("blur",(function(){n=!1,console.log("stop render")})),addEventListener("focus",(function(){cancelAnimationFrame(m),n=!0,o=performance.now(),m=requestAnimationFrame(y),console.log("start render")}));let m=requestAnimationFrame(y);function y(t){const e=t-o;o=t,h.context.clearRect(0,0,h.width,h.height),h.layers.forEach((t=>t.update(e))),n&&(m=requestAnimationFrame(y))}const l=h,p=class{constructor(t,i){this.img=e.dice,this.x=t-42,this.y=i-42,this.frameSize=84,this.throwDuration=s,this.fps=30,this.frameDuration=Math.floor(1e3/this.fps),this.frameTimeout=this.frameDuration,this.framePathSize=Math.floor(this.throwDuration/this.frameDuration),this.framePath=[],this.framePoint={x:0,y:0},this.value=this.getNewValue(),this.pointer=new class{constructor(t){this.image=e.dicePointer,this.size=100,this.x=t.x-8,this.y=t.y-8,this.frame=0,this.fps=30,this.frameDuration=Math.floor(1e3/this.fps),this.frameTimeout=this.frameDuration,this.frames=this.getFrames()}getFrames(){const t=[];for(let e=0;e<this.image.height;e+=this.size)for(let i=0;i<this.image.width;i+=this.size)t.push({x:i,y:e});return t}update(t){this.frameTimeout-=t,this.frameTimeout<=0&&(this.frameTimeout+=this.frameDuration,this.frame++,this.frame===this.frames.length&&(this.frame=0)),l.context.drawImage(this.image,this.frames[this.frame].x,this.frames[this.frame].y,this.size,this.size,this.x,this.y,this.size,this.size)}}(this),this.isActive=!1}getNewValue(){const t=Math.ceil(6*Math.random());switch(t){case 1:this.framePoint.x=0,this.framePoint.y=Math.random()<.5?4*this.frameSize:12*this.frameSize;break;case 2:this.framePoint.x=4*this.frameSize,this.framePoint.y=Math.random()<.5?4*this.frameSize:12*this.frameSize;break;case 5:this.framePoint.x=12*this.frameSize,this.framePoint.y=Math.random()<.5?4*this.frameSize:12*this.frameSize;break;case 6:this.framePoint.x=8*this.frameSize,this.framePoint.y=Math.random()<.5?4*this.frameSize:12*this.frameSize;break;case 3:this.framePoint.x=4*Math.floor(4*Math.random())*this.frameSize,this.framePoint.y=0;break;case 4:this.framePoint.x=4*Math.floor(4*Math.random())*this.frameSize,this.framePoint.y=8*this.frameSize;break;default:console.warn("error in dice value")}return t}throw(){if(this.framePath.length)return 0;let t="";for(;t.length<this.framePathSize;)t+=(""+Math.random()).slice(2);this.value=this.getNewValue(),this.framePath.push(this.framePoint);let e=Math.floor(8*Math.random()),{x:i,y:r}=this.framePoint;const s=15*this.frameSize;for(let a=0;a<this.framePathSize;a++)0!==e&&4!==e&&(i+=e<4?this.frameSize:-this.frameSize,i<0&&(i=s),i>s&&(i=0)),2!==e&&6!==e&&(r+=e>2&&e<6?this.frameSize:-this.frameSize,r<0&&(r=s),r>s&&(r=0)),this.framePath.push({x:i,y:r}),+t[a]<2&&(e--,e<0&&(e=7)),+t[a]>7&&(e++,e>7&&(e=0))}update(t){this.isActive&&this.pointer.update(t),this.framePath.length&&(this.frameTimeout-=t,this.frameTimeout<=0&&(this.frameTimeout+=this.frameDuration,this.framePoint=this.framePath.pop())),l.context.drawImage(this.img,this.framePoint.x,this.framePoint.y,this.frameSize,this.frameSize,this.x,this.y,this.frameSize,this.frameSize)}};let c=0;const x=class{constructor(t="",e=l.layers.length,i=[]){this.name=t||"layer"+c++,this.zIndex=e,this.objects=i,e===l.layers.length?l.layers.push(this):(l.layers.splice(e,0,this),l.layers.forEach(((t,e)=>t.zIndex=e)))}update(t){this.objects.forEach((e=>e.update(t)))}remove(t){this.objects=this.objects.filter((e=>e!==t))}add(t){this.objects.push(t)}clear(){this.objects=[]}},f=class{constructor(t,e){this.callback=t,this.milliseconds=e,l.layers[0].add(this)}update(t){this.milliseconds-=t,this.milliseconds<=0&&(this.callback(),l.layers[0].remove(this))}},u=class{constructor(t,e){this.image=t,this.maxSize=128,this.minSize=96,this.resize(),this.startPoint=e,this.reserve=d.board.reserves[e],this.home=d.board.homes[e],this.container=this.reserve,this.index=d.board.addToReserve(e),this.x=this.container[this.index].x,this.y=this.container[this.index].y,this.stepDuration=400,this.steps=0,this.target=null,this.pointer=new class{constructor(){this.scaleDuration=400,this.rotationSpeed=.003,this.maxSize=132,this.minSize=102,this.size=this.minSize,this.halfSize=this.size/2,this.scaleRate=(this.maxSize-this.minSize)/this.scaleDuration,this.direction=0,this.isScaleUp=!0}draw(t,e,i){this.direction+=this.rotationSpeed*i,this.isScaleUp?(this.size+=this.scaleRate*i,this.size>=this.maxSize&&(this.isScaleUp=!1)):(this.size-=this.scaleRate*i,this.size<=this.minSize&&(this.isScaleUp=!0)),this.halfSize=this.size/2,l.context.setTransform(1,0,0,1,e.x,e.y),l.context.rotate(this.direction),l.context.drawImage(t,-this.halfSize,-this.halfSize,this.size,this.size),l.context.setTransform(1,0,0,1,0,0)}},this.isAvailable=!1}resize(t){this.size=t||this.minSize,this.halfSize=this.size/2}checkUse(t){if(this.container===this.reserve&&6===t)return this.isAvailable=!0,new f((()=>this.isAvailable=!1),2e3),this}move(t){this.steps}update(t){this.isAvailable&&this.pointer.draw(e.pointerGreen,{x:this.x,y:this.y},t),l.context.drawImage(this.image,this.x-this.halfSize,this.y-this.halfSize,this.size,this.size)}},g=class{constructor(t,i){this.image=i%2==0?e.pointerPlayerH:e.pointerPlayerV,this.frameWidth=i%2==0?480:120,this.frameHeight=i%2==0?120:480,this.frame=0,this.fps=30,this.frameDuration=Math.floor(1e3/this.fps),this.frameTimeout=this.frameDuration,this.frames=this.getFrames(),this.x=i%2==0?5.5*r:1===i?14*r:0,this.y=i%2!=0?5.5*r:2===i?14*r:0,this.restDice=null,this.isGetDouble=!1,this.startPoint=i,this.tokens=this.generateTokens(t),this.layer=l.getLayer("players")}getFrames(){const t=[];for(let e=0;e<this.image.height;e+=this.frameHeight)for(let i=0;i<this.image.width;i+=this.frameWidth)t.push({x:i,y:e});return t}generateTokens(t){const e=l.getLayer("tokens"),i=[];for(let r=0;r<4;r++){const r=new u(t,this.startPoint);i.push(r),e.add(r)}return i}startTurn(){this.isGetDouble||this.layer.add(this),d.dices.forEach((t=>t.throw())),this.isGetDouble=d.dices[0].value===d.dices[1].value,d.dices[0].value>=d.dices[1].value?(this.restDiceIndex=1,new f((()=>this.useDice(d.dices[0])),s)):(this.restDiceIndex=0,new f((()=>this.useDice(d.dices[1])),s))}useDice(t){t.isActive=!0;const e=[];this.tokens.forEach((i=>{i.checkUse(t.value)&&e.push(i)})),new f((()=>{if(t.isActive=!1,null!==this.restDiceIndex)return this.useDice(d.dices[this.restDiceIndex]),void(this.restDiceIndex=null);this.isGetDouble?this.startTurn():this.endTurn()}),2e3)}endTurn(){this.layer.remove(this),d.nextTurn()}setDices(t,e){this.dices=t>=e?[t,e]:[e,t]}update(t){this.frameTimeout-=t,this.frameTimeout<=0&&(this.frameTimeout+=this.frameDuration,this.frame++,this.frame===this.frames.length&&(this.frame=0)),l.context.drawImage(this.image,this.frames[this.frame].x,this.frames[this.frame].y,this.frameWidth,this.frameHeight,this.x,this.y,this.frameWidth,this.frameHeight)}};!function(t){let s=Object.keys(e).length+Object.keys(i).length;for(const t in e){const i=new Image;i.src="./src/images/"+e[t],i.onload=()=>{e[t]=i,a()}}for(const t in i){const e=new Audio("./src/sounds/"+i[t]);e.oncanplaythrough=r=>{r.target.oncanplaythrough=null,i[t]=e,a()}}function a(){s--,s||(d.board=new class{constructor(){this.image=e.board,this.ceilSize=r,this.imageSize=13*this.ceilSize,this.reserveTop=[{isEmpty:!0,target:6,x:0,y:0,rateX:5.5,rateY:0},{isEmpty:!0,target:6,x:0,y:0,rateX:6.5,rateY:0},{isEmpty:!0,target:6,x:0,y:0,rateX:7.5,rateY:0},{isEmpty:!0,target:6,x:0,y:0,rateX:8.5,rateY:0}],this.reserveRight=[{isEmpty:!0,target:18,x:0,y:0,rateX:14,rateY:5.5},{isEmpty:!0,target:18,x:0,y:0,rateX:14,rateY:6.5},{isEmpty:!0,target:18,x:0,y:0,rateX:14,rateY:7.5},{isEmpty:!0,target:18,x:0,y:0,rateX:14,rateY:8.5}],this.reserveBottom=[{isEmpty:!0,target:30,x:0,y:0,rateX:5.5,rateY:14},{isEmpty:!0,target:30,x:0,y:0,rateX:6.5,rateY:14},{isEmpty:!0,target:30,x:0,y:0,rateX:7.5,rateY:14},{isEmpty:!0,target:30,x:0,y:0,rateX:8.5,rateY:14}],this.reserveLeft=[{isEmpty:!0,target:42,x:0,y:0,rateX:0,rateY:5.5},{isEmpty:!0,target:42,x:0,y:0,rateX:0,rateY:6.5},{isEmpty:!0,target:42,x:0,y:0,rateX:0,rateY:7.5},{isEmpty:!0,target:42,x:0,y:0,rateX:0,rateY:8.5}],this.reserves=[this.reserveTop,this.reserveRight,this.reserveBottom,this.reserveLeft],this.toiletTop=[{token:null,move:1,x:0,y:0,rateX:10,rateY:2},{token:null,move:3,x:0,y:0,rateX:11,rateY:2},{token:null,move:6,target:11,x:0,y:0,rateX:12,rateY:2}],this.toiletRight=[{token:null,move:1,x:0,y:0,rateX:12,rateY:10},{token:null,move:3,x:0,y:0,rateX:12,rateY:11},{token:null,move:6,target:23,x:0,y:0,rateX:12,rateY:12}],this.toiletBottom=[{token:null,move:1,x:0,y:0,rateX:4,rateY:12},{token:null,move:3,x:0,y:0,rateX:3,rateY:12},{token:null,move:6,target:35,x:0,y:0,rateX:2,rateY:12}],this.toiletLeft=[{token:null,move:1,x:0,y:0,rateX:2,rateY:4},{token:null,move:3,x:0,y:0,rateX:2,rateY:3},{token:null,move:6,target:47,x:0,y:0,rateX:2,rateY:2}],this.toilets=[this.toiletTop,this.toiletRight,this.toiletBottom,this.toiletLeft],this.homeTop=[{token:null,x:0,y:0,rateX:7,rateY:2},{token:null,x:0,y:0,rateX:7,rateY:3},{token:null,x:0,y:0,rateX:7,rateY:4},{token:null,x:0,y:0,rateX:7,rateY:5}],this.homeRight=[{token:null,x:0,y:0,rateX:12,rateY:7},{token:null,x:0,y:0,rateX:11,rateY:7},{token:null,x:0,y:0,rateX:10,rateY:7},{token:null,x:0,y:0,rateX:9,rateY:7}],this.homeBottom=[{token:null,x:0,y:0,rateX:7,rateY:12},{token:null,x:0,y:0,rateX:7,rateY:11},{token:null,x:0,y:0,rateX:7,rateY:10},{token:null,x:0,y:0,rateX:7,rateY:9}],this.homeLeft=[{token:null,x:0,y:0,rateX:2,rateY:7},{token:null,x:0,y:0,rateX:3,rateY:7},{token:null,x:0,y:0,rateX:4,rateY:7},{token:null,x:0,y:0,rateX:5,rateY:7}],this.homes=[this.homeTop,this.homeRight,this.homeBottom,this.homeLeft],this.ports=[{type:"topLeft",target:44,x:0,y:0,rateX:5,rateY:5},{type:"topRight",target:16,x:0,y:0,rateX:9,rateY:5},{type:"rightTop",target:8,x:0,y:0,rateX:9,rateY:5},{type:"rightBottom",target:28,x:0,y:0,rateX:9,rateY:9},{type:"bottomRight",target:20,x:0,y:0,rateX:9,rateY:9},{type:"bottomLeft",target:40,x:0,y:0,rateX:5,rateY:9},{type:"leftBottom",target:32,x:0,y:0,rateX:5,rateY:9},{type:"leftTop",target:4,x:0,y:0,rateX:5,rateY:5}],this.ceils=[{type:"corner",x:0,y:0,rateX:1,rateY:1},{type:"empty",x:0,y:0,rateX:2,rateY:1},{type:"empty",x:0,y:0,rateX:3,rateY:1},{type:"empty",x:0,y:0,rateX:4,rateY:1},{type:"port",target:"topLeft",x:0,y:0,rateX:5,rateY:1},{type:"empty",x:0,y:0,rateX:6,rateY:1},{type:"home",target:"HomeTop",x:0,y:0,rateX:7,rateY:1},{type:"empty",x:0,y:0,rateX:8,rateY:1},{type:"port",target:"topRight",x:0,y:0,rateX:9,rateY:1},{type:"toilet",target:"toiletTop",x:0,y:0,rateX:10,rateY:1},{type:"empty",x:0,y:0,rateX:11,rateY:1},{type:"exit",target:"toiletTop",x:0,y:0,rateX:12,rateY:1},{type:"corner",x:0,y:0,rateX:13,rateY:1},{type:"empty",x:0,y:0,rateX:13,rateY:2},{type:"empty",x:0,y:0,rateX:13,rateY:3},{type:"empty",x:0,y:0,rateX:13,rateY:4},{type:"port",target:"rightTop",x:0,y:0,rateX:13,rateY:5},{type:"empty",x:0,y:0,rateX:13,rateY:6},{type:"home",target:"HomeRight",x:0,y:0,rateX:13,rateY:7},{type:"empty",x:0,y:0,rateX:13,rateY:8},{type:"port",target:"rightBottom",x:0,y:0,rateX:13,rateY:9},{type:"toilet",target:"toiletRight",x:0,y:0,rateX:13,rateY:10},{type:"empty",x:0,y:0,rateX:13,rateY:11},{type:"exit",target:"toiletRight",x:0,y:0,rateX:13,rateY:12},{type:"corner",x:0,y:0,rateX:13,rateY:13},{type:"empty",x:0,y:0,rateX:12,rateY:13},{type:"empty",x:0,y:0,rateX:11,rateY:13},{type:"empty",x:0,y:0,rateX:10,rateY:13},{type:"port",target:"bottomRight",x:0,y:0,rateX:9,rateY:13},{type:"empty",x:0,y:0,rateX:8,rateY:13},{type:"home",target:"HomeBottom",x:0,y:0,rateX:7,rateY:13},{type:"empty",x:0,y:0,rateX:6,rateY:13},{type:"port",target:"bottomLeft",x:0,y:0,rateX:5,rateY:13},{type:"toilet",target:"toiletBottom",x:0,y:0,rateX:4,rateY:13},{type:"empty",x:0,y:0,rateX:3,rateY:13},{type:"exit",target:"toiletBottom",x:0,y:0,rateX:2,rateY:13},{type:"corner",x:0,y:0,rateX:1,rateY:13},{type:"empty",x:0,y:0,rateX:1,rateY:12},{type:"empty",x:0,y:0,rateX:1,rateY:11},{type:"empty",x:0,y:0,rateX:1,rateY:10},{type:"port",target:"leftBottom",x:0,y:0,rateX:1,rateY:9},{type:"empty",x:0,y:0,rateX:1,rateY:8},{type:"home",target:"HomeLeft",x:0,y:0,rateX:1,rateY:7},{type:"empty",x:0,y:0,rateX:1,rateY:6},{type:"port",target:"leftTop",x:0,y:0,rateX:1,rateY:5},{type:"toilet",target:"toiletLeft",x:0,y:0,rateX:1,rateY:4},{type:"empty",x:0,y:0,rateX:1,rateY:3},{type:"exit",target:"toiletLeft",x:0,y:0,rateX:1,rateY:2}],this.init()}init(){const t=.5*this.ceilSize;[...this.reserves,...this.toilets,...this.homes,this.ports,this.ceils].forEach((e=>{e.forEach((e=>{e.x=t+this.ceilSize*e.rateX,e.y=t+this.ceilSize*e.rateY}))}))}addToReserve(t){const e=this.reserves[t];for(let t=0;t<e.length;t++)if(e[t].isEmpty)return e[t].isEmpty=!1,t}removeFromReserve(t,e){this.reserves[t][e].isEmpty=!0}update(){l.context.drawImage(this.image,this.ceilSize,this.ceilSize,this.imageSize,this.imageSize)}},new x("board",0,[d.board]),d.dices.push(new p(l.x-63,l.y-63)),d.dices.push(new p(l.x+63,l.y+63)),new x("dices",1,d.dices),new x("players",2,[]),new x("tokens",3,[]),d.players.push(new g(e.tokenColor,0)),d.players.push(new g(e.tokenBlack,1)),d.players.push(new g(e.tokenYellow,2)),d.players.push(new g(e.tokenRed,3)),d.currentTurn=Math.floor(Math.random()*d.players.length),d.nextTurn(),document.body.onclick=function(t){console.log("x:",t.clientX,"y:",t.clientY)})}}();const d={players:[],currentTurn:0,board:null,dices:[],nextTurn(){this.players[this.currentTurn++].startTurn(),this.currentTurn===this.players.length&&(this.currentTurn=0)}}})();